import React, { useState } from ‘react’;
import { Calendar, Heart, Target, Lightbulb, Star, Compass } from ‘lucide-react’;

const VisionJournalWorksheet = () => {
const [formData, setFormData] = useState({
date: ‘’,
dreamTitle: ‘’,
coreValues: [’’, ‘’, ‘’],
lifeAreas: {
career: ‘’,
relationships: ‘’,
health: ‘’,
personal: ‘’,
financial: ‘’,
spiritual: ‘’
},
oneYearGoals: [’’, ‘’, ‘’],
fiveYearVision: ‘’,
dailyActions: [’’, ‘’, ‘’],
obstacles: ‘’,
support: ‘’,
affirmation: ‘’,
gratitude: [’’, ‘’, ‘’]
});

const handleInputChange = (field, value, index = null, subField = null) => {
setFormData(prev => {
if (index !== null && Array.isArray(prev[field])) {
const newArray = […prev[field]];
newArray[index] = value;
return { …prev, [field]: newArray };
} else if (subField) {
return {
…prev,
[field]: {
…prev[field],
[subField]: value
}
};
} else {
return { …prev, [field]: value };
}
});
};

const printWorksheet = () => {
window.print();
};

return (
<div className="max-w-4xl mx-auto p-8 bg-white font-serif">
{/* Header */}
<div className="text-center mb-8 border-b-2 border-indigo-200 pb-6">
<h1 className="text-4xl font-bold text-indigo-800 mb-2">Vision Journal Worksheet</h1>
<p className="text-lg text-gray-600 italic">Designing Your Intentional Life</p>
<div className="flex items-center justify-center mt-4 text-gray-500">
<Calendar className="w-5 h-5 mr-2" />
<input
type=“date”
value={formData.date}
onChange={(e) => handleInputChange(‘date’, e.target.value)}
className=“border-b border-gray-300 text-center focus:border-indigo-500 focus:outline-none”
/>
</div>
</div>

```
  {/* Vision Title */}
  <div className="mb-8">
    <div className="flex items-center mb-3">
      <Star className="w-6 h-6 text-yellow-500 mr-2" />
      <h2 className="text-2xl font-semibold text-gray-800">My Vision Title</h2>
    </div>
    <input
      type="text"
      placeholder="Give your vision a powerful title..."
      value={formData.dreamTitle}
      onChange={(e) => handleInputChange('dreamTitle', e.target.value)}
      className="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-indigo-500 focus:outline-none text-lg"
    />
  </div>

  {/* Core Values */}
  <div className="mb-8">
    <div className="flex items-center mb-4">
      <Heart className="w-6 h-6 text-red-500 mr-2" />
      <h2 className="text-2xl font-semibold text-gray-800">Core Values</h2>
    </div>
    <p className="text-gray-600 mb-4">What principles guide your decisions and actions?</p>
    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
      {formData.coreValues.map((value, index) => (
        <input
          key={index}
          type="text"
          placeholder={`Core Value ${index + 1}`}
          value={value}
          onChange={(e) => handleInputChange('coreValues', e.target.value, index)}
          className="p-3 border border-gray-300 rounded-lg focus:border-red-500 focus:outline-none"
        />
      ))}
    </div>
  </div>

  {/* Life Areas Vision */}
  <div className="mb-8">
    <div className="flex items-center mb-4">
      <Compass className="w-6 h-6 text-blue-500 mr-2" />
      <h2 className="text-2xl font-semibold text-gray-800">Life Areas Vision</h2>
    </div>
    <p className="text-gray-600 mb-4">Describe your ideal future in each area of life:</p>
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
      {Object.entries(formData.lifeAreas).map(([area, value]) => (
        <div key={area}>
          <label className="block text-sm font-medium text-gray-700 mb-2 capitalize">
            {area === 'personal' ? 'Personal Growth' : area}
          </label>
          <textarea
            placeholder={`Your vision for ${area}...`}
            value={value}
            onChange={(e) => handleInputChange('lifeAreas', e.target.value, null, area)}
            className="w-full p-3 border border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none h-20 resize-none"
          />
        </div>
      ))}
    </div>
  </div>

  {/* Goals */}
  <div className="mb-8">
    <div className="flex items-center mb-4">
      <Target className="w-6 h-6 text-green-500 mr-2" />
      <h2 className="text-2xl font-semibold text-gray-800">One-Year Goals</h2>
    </div>
    <p className="text-gray-600 mb-4">What specific goals will move you toward your vision?</p>
    <div className="space-y-3">
      {formData.oneYearGoals.map((goal, index) => (
        <input
          key={index}
          type="text"
          placeholder={`Goal ${index + 1}: Be specific and measurable`}
          value={goal}
          onChange={(e) => handleInputChange('oneYearGoals', e.target.value, index)}
          className="w-full p-3 border border-gray-300 rounded-lg focus:border-green-500 focus:outline-none"
        />
      ))}
    </div>
  </div>

  {/* Five-Year Vision */}
  <div className="mb-8">
    <div className="flex items-center mb-4">
      <Lightbulb className="w-6 h-6 text-purple-500 mr-2" />
      <h2 className="text-2xl font-semibold text-gray-800">Five-Year Vision</h2>
    </div>
    <p className="text-gray-600 mb-4">Paint a vivid picture of your life five years from now:</p>
    <textarea
      placeholder="Describe your ideal life in detail. Where are you living? What are you doing? How do you feel? What does a typical day look like?"
      value={formData.fiveYearVision}
      onChange={(e) => handleInputChange('fiveYearVision', e.target.value)}
      className="w-full p-4 border border-gray-300 rounded-lg focus:border-purple-500 focus:outline-none h-32 resize-none"
    />
  </div>

  {/* Daily Actions */}
  <div className="mb-8">
    <h2 className="text-2xl font-semibold text-gray-800 mb-4">Daily Actions</h2>
    <p className="text-gray-600 mb-4">What three actions can you take daily to move toward your vision?</p>
    <div className="space-y-3">
      {formData.dailyActions.map((action, index) => (
        <input
          key={index}
          type="text"
          placeholder={`Daily Action ${index + 1}: Small, consistent steps`}
          value={action}
          onChange={(e) => handleInputChange('dailyActions', e.target.value, index)}
          className="w-full p-3 border border-gray-300 rounded-lg focus:border-indigo-500 focus:outline-none"
        />
      ))}
    </div>
  </div>

  {/* Challenges & Support */}
  <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
    <div>
      <h2 className="text-xl font-semibold text-gray-800 mb-3">Potential Obstacles</h2>
      <textarea
        placeholder="What challenges might you face? How will you overcome them?"
        value={formData.obstacles}
        onChange={(e) => handleInputChange('obstacles', e.target.value)}
        className="w-full p-3 border border-gray-300 rounded-lg focus:border-orange-500 focus:outline-none h-24 resize-none"
      />
    </div>
    <div>
      <h2 className="text-xl font-semibold text-gray-800 mb-3">Support System</h2>
      <textarea
        placeholder="Who will support you? What resources do you need?"
        value={formData.support}
        onChange={(e) => handleInputChange('support', e.target.value)}
        className="w-full p-3 border border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none h-24 resize-none"
      />
    </div>
  </div>

  {/* Affirmation */}
  <div className="mb-8">
    <h2 className="text-2xl font-semibold text-gray-800 mb-3">Personal Affirmation</h2>
    <p className="text-gray-600 mb-4">Write a powerful "I am" statement that embodies your vision:</p>
    <input
      type="text"
      placeholder="I am..."
      value={formData.affirmation}
      onChange={(e) => handleInputChange('affirmation', e.target.value)}
      className="w-full p-4 border-2 border-purple-300 rounded-lg focus:border-purple-500 focus:outline-none text-lg font-medium"
    />
  </div>

  {/* Gratitude */}
  <div className="mb-8">
    <h2 className="text-2xl font-semibold text-gray-800 mb-4">Gratitude Foundation</h2>
    <p className="text-gray-600 mb-4">What are you grateful for right now?</p>
    <div className="space-y-3">
      {formData.gratitude.map((item, index) => (
        <input
          key={index}
          type="text"
          placeholder={`I am grateful for...`}
          value={item}
          onChange={(e) => handleInputChange('gratitude', e.target.value, index)}
          className="w-full p-3 border border-gray-300 rounded-lg focus:border-yellow-500 focus:outline-none"
        />
      ))}
    </div>
  </div>

  {/* Action Buttons */}
  <div className="text-center pt-6 border-t border-gray-200 print:hidden">
    <button
      onClick={printWorksheet}
      className="bg-indigo-600 text-white px-8 py-3 rounded-lg hover:bg-indigo-700 transition-colors font-semibold"
    >
      Print Worksheet
    </button>
  </div>

  {/* Footer for printed version */}
  <div className="hidden print:block text-center mt-8 text-sm text-gray-500">
    <p>© Your Book Title - Vision Journal Worksheet</p>
    <p>Remember: Your vision is your compass. Revisit and refine it regularly.</p>
  </div>

  {/* Print Styles */}
  <style jsx>{`
    @media print {
      body {
        -webkit-print-color-adjust: exact;
        print-color-adjust: exact;
      }
      .print\\:hidden {
        display: none !important;
      }
      .print\\:block {
        display: block !important;
      }
    }
  `}</style>
</div>
```

);
};

export default VisionJournalWorksheet;